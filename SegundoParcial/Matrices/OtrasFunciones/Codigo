def CrearMatriz(m,n,v):
    C=[]
    for i in range (m):
        C.append([])
        for j in range(n):
            C[i].append(v)

    return C

def ObtenerDimensiones(A):
    return(len(A),len(A[0]))


def getMenorMatriz(A,r,c):
    m,n = ObtenerDimensiones(A)
    C = CrearMatriz(m-1,n-1,0)
    for i in range(m):
        if i == r:
                continue
        for j in range(n):
            if j == c:
                continue  
            Ci = i
            if i > r:
                Ci = i - 1
            Cj = j
            if j > c:
                Cj = j-1
            C[Ci][Cj] = A[i][j]
    return C

def detMatriz(A):
    m,n = ObtenerDimensiones(A)
    if m != n:
        print("La Matriz No Es Cuadrada")
        return -1
    if m == 1:
        return m
    if m == 2:
        return A[0][0]*A[1][1] - A[0][1]*A[1][0]
    det = 0
    for j in range(n):
        det += (-1)**(j)*A[0][j]*detMatriz(getMenorMatriz(A,0,j))
    return det

def getMatrizAdyacente(A):
    m,n = ObtenerDimensiones(A)
    C = CrearMatriz(m,n,0)
    for i in range (m):
        for j in range (n):
            C[i][j] = (-1)**(i+j)*detMatriz(getMenorMatriz(A,i,j))
    return C

def getMatrizTranspuesta(A):
    m,n = ObtenerDimensiones(A)
    C = CrearMatriz(n,m,0)
    for i in range(m):
        for j in range(n):
            C[j][i] = A[i][j]
    return C

A = CrearMatriz(3,3,0)
A[0] = [1,1,1]
A[1] = [1,2,3]
A[2] = [1,4,9]
B = getMatrizTranspuesta(A)
print(A)
print(detMatriz(A))
print(getMatrizAdyacente(B))
